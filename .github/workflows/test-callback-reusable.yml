# One of the reasons of not including this into testing workflow is https://github.com/EnricoMi/publish-unit-test-result-action#support-fork-repositories-and-dependabot-branches

name: Publish Test Results (Reusable)

on:
  workflow_call:

permissions: {}

env:
  TESTS_ARTIFACT_NAME: 'test-results'

jobs:
  publish-test-results:
    name: "Publish Tests Results"
    # if: github.event.workflow_run.conclusion != 'skipped'
    runs-on: ubuntu-latest

    permissions:
      checks: write
      pull-requests: write  # needed unless run with comment_mode: off
      contents: read  # only needed for private repository
      issues: read  # only needed for private repository
      actions: read  # required by download step to access artifacts API
      statuses: write  # required to set commit status

    steps:
      - name: Download and Extract Test Result Artifacts
        uses: dawidd6/action-download-artifact@268677152d06ba59fcec7a7f0b5d961b6ccd7e1e
        with:
          name: ${{ env.TESTS_ARTIFACT_NAME }}
          path: ${{ env.TESTS_ARTIFACT_NAME }}
          run_id: ${{ github.event.workflow_run.id }}

      - name: Download and Extract Callback JSON File
        uses: dawidd6/action-download-artifact@268677152d06ba59fcec7a7f0b5d961b6ccd7e1e
        with:
          name: callback-json-artifact
          run_id: ${{ github.event.workflow_run.id }}
          if_no_artifact_found: ignore

      - name: Process callback.json
        id: process-callback-json
        run: |
          # default values
          event_file=${{ github.event_path }}
          event_name=${{ github.event_name }}

          callback_file="callback.json"
          triggered_by=$(jq -r '.triggered_by // "unknown"' $callback_file)
          echo "triggered_by: $triggered_by"
          echo "triggered-by=$triggered_by" >> $GITHUB_OUTPUT

          if [[ "$triggered_by" == "pr" || "$triggered_by" == "syncwith" ]]; then
            event_file="event.json"
            event_name="pull_request"
            event_file_run_id=$(jq -r '.pr_run_id' $callback_file)
          fi

          if [[ "$triggered_by" == "manual" ]]; then
            event_file="event.json"
            event_name=${{ github.event.workflow_run.event }}
            event_file_run_id=${{ github.event.workflow_run.id }}
          fi

          echo "event-name=$event_name" >> $GITHUB_OUTPUT
          echo "event-file-run-id=$event_file_run_id" >> $GITHUB_OUTPUT
          echo "event-file=$event_file" >> $GITHUB_OUTPUT


      - name: Download and Extract PR Event File
        uses: dawidd6/action-download-artifact@268677152d06ba59fcec7a7f0b5d961b6ccd7e1e
        with:
          name: event_file
          run_id: ${{ steps.process-callback-json.outputs.event-file-run-id }}

      - name: Publish Test Results
        # TODO: check if this compare_to_earlier_commit work after target repo merge to master
        uses: EnricoMi/publish-unit-test-result-action@ca89ad036b5fcd524c1017287fb01b5139908408
        with:
          files: "${{ env.TESTS_ARTIFACT_NAME }}/**/*.xml"
          report_individual_runs: true
          event_file: ${{ steps.process-callback-json.outputs.event-file }}
          event_name: ${{ steps.process-callback-json.outputs.event-name }}
          # This could be used for files annotation, but Boost JUNIT output is insufficient for it (no file, line properties).
          # They exist in native Boost test result format. Mb try to update testing framework, and this will work
          # test_file_prefix: "+test/"
          # check_run_annotations_branch: "*"

      - name: Set Final Test Status
        if: steps.process-callback-json.outputs.event-name == 'pull_request'
        id: parse-event-file
        run: |
          head_sha=$(jq -r '.pull_request.head.sha' ${{ steps.process-callback-json.outputs.event-file }})

          conclusion=${{ github.event.workflow_run.conclusion }}
          if [ "$conclusion" == "success" ]; then
            description="Testing finished"
          else
            description="Testing error occured, check actions"
          fi
          state=${{ github.event.workflow_run.conclusion == 'success' && 'success' || 'failure' }}

          gh api \
            repos/${{ github.repository }}/statuses/$head_sha \
            -f state=$state \
            -f context='Matrix Tests' \
            -f description="$description" \
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
